[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "clab-connector"
version = "0.5.8"
description = "EDA Containerlab Connector"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "bcrypt==4.3.0",
    "certifi==2025.7.14",
    "cffi==1.17.1",
    "charset-normalizer==3.4.2",
    "cryptography==45.0.6",
    "idna==3.10",
    "jinja2==3.1.6",
    "kubernetes==33.1.0",
    "markupsafe==3.0.2",
    "paramiko>=3.5.1",
    "pycparser==2.22",
    "pynacl==1.5.0",
    "pyyaml==6.0.2",
    "requests==2.32.4",
    "typer==0.16.0",
    "urllib3==2.5.0",
    "click==8.2.1",
    "rich>=10.0.0",  # For better CLI output formatting
]

[project.scripts]
clab-connector = "clab_connector.cli.main:app"

[tool.hatch.build]
include = [
    "clab_connector/**/*.py",
    "clab_connector/**/*.j2",
    "clab_connector/templates/*"
]

[tool.hatch.build.targets.wheel]
packages = ["clab_connector"]

[tool.ruff]
line-length = 88
target-version = "py311"
extend-exclude = ["example-topologies"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes (includes F401 unused imports, F841 unused vars)
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "N",      # pep8-naming
    "C90",    # mccabe complexity
    "RUF",    # Ruff-specific rules
    "ARG",    # flake8-unused-arguments (unused function arguments)
    "PIE",    # flake8-pie (includes unnecessary placeholders)
    "PL",     # Pylint (includes unused private members)
]
ignore = [
    "E501",     # Line too long (handled by formatter)
    "W291",     # Trailing whitespace (handled by formatter)
    "W293",     # Blank line contains whitespace (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*.py" = ["B008"]  # Allow function calls in argument defaults for tests

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pylint]
max-args = 15
max-branches = 13
max-returns = 6
max-statements = 50

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
exclude = ["example-topologies/"]

[[tool.mypy.overrides]]
module = ["paramiko.*", "kubernetes.*", "bcrypt.*"]
ignore_missing_imports = true


[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["example-topologies/**/*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  example-topologies
)/
'''

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.4",
]
